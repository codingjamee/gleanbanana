<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>자동완성 테스트</title>
</head>
<style>
  body {
      font-family: 'Arial', sans-serif;
      background-color: #f4f4f4;
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 66vh;
  }

  h1 {
      color: #333;
  }

  form {
      display: flex;
      align-items: center;
      margin-bottom: 20px;
  }

  label {
      margin-right: 10px;
      color: #333;
  }

  input {
      padding: 10px;
      font-size: 16px;
      border: 1px solid #ccc;
      border-radius: 5px;
      margin-right: 10px;
  }

  button {
      padding: 10px 15px;
      font-size: 16px;
      background-color: #007bff;
      color: #fff;
      border: none;
      border-radius: 5px;
      cursor: pointer;
  }

  h2 {
      color: #333;
  }

  ul {
      list-style-type: none;
      padding: 0;
      margin: 0;
  }

  li {
      padding: 10px;
      background-color: #fff;
      border: 1px solid #ccc;
      margin-bottom: 5px;
      cursor: pointer;
  }

  li:hover {
      background-color: #f0f0f0;
  }
</style>
<body>

  <h1>상품 자동완성 테스트</h1>

  <form action="/items/autocomplete" method="GET">
    <label for="search">검색:</label>
    <input type="text" id="search" name="search" placeholder="검색어를 입력하세요..." onkeyup="handleSearch(event)">
    <button type="submit">검색</button>
  </form>
  <ul id="suggestions">
    <li>감자</li>
    <li>양파</li>
    <li>아몬드 버터</li>
    <li>사과주스</li>
    <li>라임</li>
    <li>오렌지</li>
  </ul>

  <script>

    let searchTimer; // 타이머를 저장할 변수

    function handleSearch(event) {
      const searchTerm = event.target.value;
  
      clearTimeout(searchTimer);
  
      searchTimer = setTimeout(() => {
          if (!searchTerm.trim()) {
              // 검색어가 빈 값이면 기본 추천 상품 보여주기
              showDefaultSuggestions();
          } else {
              // API 요청 보내기
              fetch('/api/autocomplete?search=' + searchTerm)
                  .then(response => {
                      if (!response.ok) {
                          throw new Error('Network response was not ok');
                      }
                      return response.json();
                  })
                  .then(suggestions => {
                      const suggestionsElement = document.getElementById('suggestions');
                      suggestionsElement.innerHTML = '';
                      suggestions.forEach(suggestion => {
                          const suggestionElement = document.createElement('li');
                          suggestionElement.textContent = suggestion.item_name;
                          suggestionElement.addEventListener('click', () => {
                              document.getElementById('search').value = suggestion.item_name;
                              document.getElementById('search').focus();
                              suggestionsElement.innerHTML = '';
                              preventSubmit = true;
                          });
                          suggestionsElement.appendChild(suggestionElement);
                      });
                  })
                  .catch(error => {
                      console.error('Error fetching autocomplete suggestions:', error);
                      // 오류가 발생한 경우 적절히 처리
                  });
          }
      }, 99);
  }
  
  function showDefaultSuggestions() {
      // 기본 추천 상품 보여주기
      const suggestionsElement = document.getElementById('suggestions');
      suggestionsElement.innerHTML = '';
  
      const defaultSuggestions = ['감자', '양파', '아몬드 버터', '사과주스', '라임', '오렌지'];
  
      defaultSuggestions.forEach(suggestion => {
          const suggestionElement = document.createElement('li');
          suggestionElement.textContent = suggestion;
          suggestionElement.addEventListener('click', () => {
              document.getElementById('search').value = suggestion;
              document.getElementById('search').focus();
              suggestionsElement.innerHTML = '';
              preventSubmit = true;
          });
          suggestionsElement.appendChild(suggestionElement);
      });
  }
  
  
  // 'keyup' 이벤트를 사용하여 입력이 이루어질 때마다 자동완성 갱신
  // document.getElementById('search').addEventListener('keyup', handleSearch);
  

  </script>


</body>
</html>